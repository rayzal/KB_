///ANALISIS PROGRAM///

DOMAINS
nama = orang(symbol,symbol) /* (Pertama , Kedua) */
//pendeklarasian data objek jamak bernama nama yang berisi functor orang yang diikuti 2 argumen bertipe data symbol

hari_lahir = tanggal_lahir(integer,symbol,integer) /* (Hari, Bulan, Tahun) */
//pendeklarasian data objek jamak bernama hari_lahir yang berisi functor tanggal_lahir yang diikuti 2 argumen bertipe data symbol

telepon = symbol /* Nomor telepon */
//pendeklarasian data objek tunggal bernama telepon bertipe data symbol

PREDICATES
nondeterm daftar_telepon(nama,symbol,hari_lahir)
//pendeklarasian predikat daftar_telepon yang berisi argumen nama,symbol,hari_lahir. nama dan hari lahir merupakan data objek jamak.

yang_ulang_tahun_bulan_ini
//pendeklarasian predikat yang_ulang_tahun_bulan_ini tanpa diikuti argumen apapun

konversi_bulan(symbol,integer)
//pendeklarasian predikat konversi_bulan yang berisi argumen symbol,integer.

cek_bulan_ulang_tahun(integer,hari_lahir)
//pendeklarasian predikat cek_bulan_ulang_tahun yang berisi argumen integer,hari_lahir. hari lahir merupakan data objek jamak.

cetak_orang(nama)
//pendeklarasian predikat cetak_orang yang berisi argumen nama. nama merupakan data objek jamak.

CLAUSES

yang_ulang_tahun_bulan_ini:-
write("**** Daftar Orang Yang Ulang Tahun Bulan Ini ****"),nl,
write(" Nama Pertama\t\t Nama Kedua\n"),
write("******************************************************"),nl,
//semua argmumen didilam write akan ditampilkan sama seperti apa yang telah dideklarasikan
date(_, Bulan_ini, _), /* Ambil bulan pada sistem komputer */

daftar_telepon(Orang, _, Tanggal),
//visual prolog akan mencari dan mencocokkan dengan klausa daftar_telepon dengan mencocokkan isi dari orang dan tanggal saja sementara mengabaikan isi
 dari argumen no telpon. 

cek_bulan_ulang_tahun(Bulan_ini, Tanggal),
//visual prolog akan mencari dan mencocokkan dengan klausa cek_bulan_ulang_tahun dengan mencocokkan isi dari Bulan_ini dan Tanggal

cetak_orang(Orang),
//visual prolog akan mencari dan mencocokkan dengan klausa cetak_orang dengan mencocokkan isi orang 

fail.
//perintah untuk memaksa lacak balik

 

yang_ulang_tahun_bulan_ini:-
write("\n\n Tekan sembarang tombol..."),nl,
readchar(_).

cetak_orang(orang(Pertama,Kedua)):-
write(" ",Pertama,"\t\t\t ",Kedua),nl.

cek_bulan_ulang_tahun(Bul,tanggal_lahir(_,Bulan,_)):-
konversi_bulan(Bulan,Bulan1),
Bul = Bulan1.

daftar_telepon(orang(erwin,effendy),"767-8463",tanggal_lahir(3,jan,1955)).
daftar_telepon(orang(pramudya,kurniawan),"438-8400",tanggal_lahir(5,feb,1985)).
daftar_telepon(orang(kusdiar,prihatin),"555-5653",tanggal_lahir(3,mar, 1935)).
daftar_telepon(orang(ui,yansen),"767-2223",tanggal_lahir(29,apr,1951)).
daftar_telepon(orang(roland,hutagalung),"555-1212",tanggal_lahir(12,may,1962)).
daftar_telepon(orang(andi,nuruddin),"438-8400",tanggal_lahir(17,jun,1980)).
daftar_telepon(orang(syarif,musadek),"767-8463",tanggal_lahir(20,jun,1986)).
daftar_telepon(orang(lidya,widyawati),"555-5653",tanggal_lahir(16,jul,1981)).
daftar_telepon(orang(yusida,andriani),"767-2223",tanggal_lahir(10,aug,1981)).
daftar_telepon(orang(slamet,riyadi),"438-8400",tanggal_lahir(25,sep,1981)).
daftar_telepon(orang(nur,harjanto),"438-8400",tanggal_lahir(20,oct,1952)).
daftar_telepon(orang(dian,marlini),"555-1212",tanggal_lahir(9,nov,1984)).
daftar_telepon(orang(teguh,heni),"767-2223",tanggal_lahir(15,nov,1987)).
daftar_telepon(orang(eka,ardiyanti),"438-8400",tanggal_lahir(31,dec,1981)).
//pendeklarasian klauasa daftar_telpon beserta isi dari argumen orang, symbol, hari_lahir.

konversi_bulan(jan, 1).
konversi_bulan(feb, 2).
konversi_bulan(mar, 3).
konversi_bulan(apr, 4).
konversi_bulan(may, 5).
konversi_bulan(jun, 6).
konversi_bulan(jul, 7).
konversi_bulan(aug, 8).
konversi_bulan(sep, 9).
konversi_bulan(oct, 10).
konversi_bulan(nov, 11).
konversi_bulan(dec, 12).
//pendeklarasian klausa konversi_bulan beserta isi dari argumen symbol dan argemen

GOAL
yang_ulang_tahun_bulan_ini.
//goal yang akan dicari solusinya


1.) Visual Prolog memanggil goal yang_ulang_tahun_bulan_ini.lalu dibaca subgoal pertama dari predikat yang_ulang_tahun_bulan_ini yaitu date. 
    Subgoal yang dibaca pertama adalah date karena ketiga subgoal diatas date tidak membutuhkan proses pencarian, karena perintahnya adalah mencetak. 
 
2.) Date mengambil Bulan pada sistem komputer, dalam hal ini adalah Bulan Maret. Sehingga maret diikatkan pada variabel Bulan_ini. 
    Proses berhasil lalu lanjut subgoal berikutnya. 
 
3.) Subgoal berikutnya yaitu daftar_telepon(Orang, _, Tanggal) didalam sub goal ini terdiri dari 1 data. Dilakukan pengecekkan unifikasi pada data yang telah ada.  
 
4.) Data pertama pada daftar_telepon adalah daftar_telepon(orang(kusdiar,prihatin), _, tanggal_lahir(3,mar, 1935)), maka orang(kusdiar,prihatin) 
    diikatkan ke variabel Orang, dan tanggal_lahir diikatkan ke variabel Tanggal. Proses sukses dilaksanakan. Lalu lanjut ke subgoal berikutnya. 
 
5.) Subgoal berikutnya yaitu cek_bulan_ulang_tahun(Bulan_ini, Tanggal). Bulan_ini telah diisi oleh januari, dan Tanggal telah diisi oleh tanggal_lahir(3,jan,1955),
    maka dilakukan pencocokan apakah cek_bulan_ulang_tahunjanuari, tanggal_lahir(3,jan,1955)) hasil tidak cocok lalu dilakukan pencocokkan kembali data 
    menggunakan lacakbalik dimulai dari subgoal berikutnya yaitu daftar_telepon(Orang, _, Tanggal) dengan unifikasi maka data teratas berikutnya akan dibaca. 
 
6.) Terdapat predikat fail pada subgoal yang terakhir untuk memaksa lacak balik meski pun telah didapat solusi.  
 
7.) Karena tidak ditemukan solusi lain, maka hasil yang didapat hanya satu yang berulang tahun bulan ini yaitu kusdiar prihatin. 

/// ANALISIS SELESAI ///

1. Apa perbedaan data object sederhana dan jamak ?

Jawab: 
Data Object Sederhana terbagi menjadi dua bagian yaitu Variabel (setiap penulisan variable harus dengan huruf capital atau dengan sebuah underscore) 
dan Constanta (apapun yang diidentifikasikan sebaagai sebuah object yang nilainya bisa bervariasi,seperti karakter, angka, dan atom), sedangkan  
Data Object Jamak memperlakukan beberapa informasi sebagai sebuah item tunggal, data object dimulai dengan sebuah nama yang biasa disebut functor yang 
diikuti oleh tiga argumen. Functor tidak melakukan apa-apa, hanya sebuah nama yang mengidentifikasi sebuah jenis data objek jamak yang didalamnya terdapat argument. 
 